# KRaft Controller
apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 10G
  image:
    application: docker.io/confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  replicas: 3
  tls:
    autoGeneratedCerts: true
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/

---

# Kafka Brokers (not exposed by CFK)
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  dataVolumeCapacity: 10G
  image:
    application: docker.io/confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      tls:
        enabled: true
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
    external:
      tls:
        enabled: true
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: mtls

---

# Schema Registry (internal only)
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: mtls
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.{{ .Release.Namespace }}.svc.cluster.local:9071
      tls:
        enabled: true
      authentication:
        type: mtls

---

# Connect (internal only)
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: mtls
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.{{ .Release.Namespace }}.svc.cluster.local:9071
      tls:
        enabled: true
      authentication:
        type: mtls

---

# Kafka REST Proxy (not exposed)
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: mtls
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.{{ .Release.Namespace }}.svc.cluster.local:9071
      tls:
        enabled: true
      authentication:
        type: mtls
    schemaRegistry:
      url: https://schemaregistry.{{ .Release.Namespace }}.svc.cluster.local:8081
      tls:
        enabled: true
      authentication:
        type: mtls

---

# Control Center (internal only) â€” ksqlDB reference removed
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  dataVolumeCapacity: 10Gi
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
  image:
    application: confluentinc/cp-enterprise-control-center:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.{{ .Release.Namespace }}.svc.cluster.local:9071
      tls:
        enabled: true
      authentication:
        type: mtls
    schemaRegistry:
      url: https://schemaregistry.{{ .Release.Namespace }}.svc.cluster.local:8081
      tls:
        enabled: true
      authentication:
        type: mtls
    connect:
      - name: connect
        url: https://connect.{{ .Release.Namespace }}.svc.cluster.local:8083
        tls:
          enabled: true
        authentication:
          type: mtls
